digraph {
graph [ordering="out"];
node0[label="func_list"];
node1[label="func_decl"];
node2[label="func_header"];
node3[label="func_name,0"];
node2 -> node3;
node4[label="param_list"];
node5[label="var_decl,0"];
node4 -> node5;
node6[label="var_decl,1"];
node4 -> node6;
node7[label="var_decl,2"];
node4 -> node7;
node2 -> node4;
node1 -> node2;
node8[label="func_body"];
node9[label="var_list"];
node10[label="var_decl,3"];
node9 -> node10;
node11[label="var_decl,4"];
node9 -> node11;
node12[label="var_decl,5"];
node9 -> node12;
node8 -> node9;
node13[label="block"];
node14[label="="];
node15[label="var_use,5"];
node14 -> node15;
node16[label="var_use,1"];
node14 -> node16;
node13 -> node14;
node17[label="="];
node18[label="var_use,4"];
node17 -> node18;
node19[label="var_use,0"];
node17 -> node19;
node13 -> node17;
node20[label="="];
node21[label="var_use,3"];
node20 -> node21;
node22[label="+"];
node23[label="var_use,1"];
node22 -> node23;
node24[label="num,1"];
node22 -> node24;
node20 -> node22;
node13 -> node20;
node25[label="while"];
node26[label="<"];
node27[label="var_use,3"];
node26 -> node27;
node28[label="var_use,2"];
node26 -> node28;
node25 -> node26;
node29[label="block"];
node30[label="if"];
node31[label="<"];
node32[label="var_use,0"];
node31 -> node32;
node33[label="var_use,4"];
node31 -> node33;
node30 -> node31;
node34[label="block"];
node35[label="="];
node36[label="var_use,4"];
node35 -> node36;
node37[label="var_use,0"];
node35 -> node37;
node34 -> node35;
node38[label="="];
node39[label="var_use,5"];
node38 -> node39;
node40[label="var_use,3"];
node38 -> node40;
node34 -> node38;
node30 -> node34;
node29 -> node30;
node41[label="="];
node42[label="var_use,3"];
node41 -> node42;
node43[label="+"];
node44[label="var_use,3"];
node43 -> node44;
node45[label="num,1"];
node43 -> node45;
node41 -> node43;
node29 -> node41;
node25 -> node29;
node13 -> node25;
node46[label="return"];
node47[label="var_use,5"];
node46 -> node47;
node13 -> node46;
node8 -> node13;
node1 -> node8;
node0 -> node1;
node48[label="func_decl"];
node49[label="func_header"];
node50[label="func_name,1"];
node49 -> node50;
node51[label="param_list"];
node52[label="var_decl,6"];
node51 -> node52;
node53[label="var_decl,7"];
node51 -> node53;
node54[label="var_decl,8"];
node51 -> node54;
node49 -> node51;
node48 -> node49;
node55[label="func_body"];
node56[label="var_list"];
node57[label="var_decl,9"];
node56 -> node57;
node58[label="var_decl,10"];
node56 -> node58;
node59[label="var_decl,11"];
node56 -> node59;
node55 -> node56;
node60[label="block"];
node61[label="="];
node62[label="var_use,9"];
node61 -> node62;
node63[label="var_use,7"];
node61 -> node63;
node60 -> node61;
node64[label="while"];
node65[label="<"];
node66[label="var_use,9"];
node65 -> node66;
node67[label="-"];
node68[label="var_use,8"];
node67 -> node68;
node69[label="num,1"];
node67 -> node69;
node65 -> node67;
node64 -> node65;
node70[label="block"];
node71[label="="];
node72[label="var_use,10"];
node71 -> node72;
node73[label="fcall,0"];
node74[label="arg_list"];
node75[label="var_use,6"];
node74 -> node75;
node76[label="var_use,9"];
node74 -> node76;
node77[label="var_use,8"];
node74 -> node77;
node73 -> node74;
node71 -> node73;
node70 -> node71;
node78[label="="];
node79[label="var_use,11"];
node78 -> node79;
node80[label="var_use,6"];
node78 -> node80;
node70 -> node78;
node81[label="="];
node82[label="var_use,6"];
node81 -> node82;
node83[label="var_use,6"];
node81 -> node83;
node70 -> node81;
node84[label="="];
node85[label="var_use,6"];
node84 -> node85;
node86[label="var_use,11"];
node84 -> node86;
node70 -> node84;
node87[label="="];
node88[label="var_use,9"];
node87 -> node88;
node89[label="+"];
node90[label="var_use,9"];
node89 -> node90;
node91[label="num,1"];
node89 -> node91;
node87 -> node89;
node70 -> node87;
node64 -> node70;
node60 -> node64;
node55 -> node60;
node48 -> node55;
node0 -> node48;
node92[label="func_decl"];
node93[label="func_header"];
node94[label="func_name,2"];
node93 -> node94;
node95[label="param_list"];
node93 -> node95;
node92 -> node93;
node96[label="func_body"];
node97[label="var_list"];
node98[label="var_decl,12"];
node97 -> node98;
node99[label="var_decl,13"];
node97 -> node99;
node96 -> node97;
node100[label="block"];
node101[label="="];
node102[label="var_use,13"];
node101 -> node102;
node103[label="num,0"];
node101 -> node103;
node100 -> node101;
node104[label="while"];
node105[label="<"];
node106[label="var_use,13"];
node105 -> node106;
node107[label="num,10"];
node105 -> node107;
node104 -> node105;
node108[label="block"];
node109[label="="];
node110[label="var_use,12"];
node109 -> node110;
node111[label="input"];
node109 -> node111;
node108 -> node109;
node112[label="="];
node113[label="var_use,13"];
node112 -> node113;
node114[label="+"];
node115[label="var_use,13"];
node114 -> node115;
node116[label="num,1"];
node114 -> node116;
node112 -> node114;
node108 -> node112;
node104 -> node108;
node100 -> node104;
node117[label="fcall,1"];
node118[label="arg_list"];
node119[label="var_use,12"];
node118 -> node119;
node120[label="num,0"];
node118 -> node120;
node121[label="num,10"];
node118 -> node121;
node117 -> node118;
node100 -> node117;
node122[label="="];
node123[label="var_use,13"];
node122 -> node123;
node124[label="num,0"];
node122 -> node124;
node100 -> node122;
node125[label="write"];
node126[label="string,0"];
node125 -> node126;
node100 -> node125;
node127[label="while"];
node128[label="<"];
node129[label="var_use,13"];
node128 -> node129;
node130[label="num,10"];
node128 -> node130;
node127 -> node128;
node131[label="block"];
node132[label="output"];
node133[label="var_use,12"];
node132 -> node133;
node131 -> node132;
node134[label="write"];
node135[label="string,1"];
node134 -> node135;
node131 -> node134;
node136[label="="];
node137[label="var_use,13"];
node136 -> node137;
node138[label="+"];
node139[label="var_use,13"];
node138 -> node139;
node140[label="num,1"];
node138 -> node140;
node136 -> node138;
node131 -> node136;
node127 -> node131;
node100 -> node127;
node141[label="write"];
node142[label="string,2"];
node141 -> node142;
node100 -> node141;
node96 -> node100;
node92 -> node96;
node0 -> node92;
}
